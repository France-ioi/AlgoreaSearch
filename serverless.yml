service: alg-search
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  deploymentBucket:
    name: alg-ops
  environment:
    STAGE: ${opt:stage, 'dev'}
    OPENSEARCH_NODE: ${env:OPENSEARCH_NODE}
    API_URL: ${env:API_URL}
    INDEX_NAME: ${env:INDEX_NAME}
    DEBUG: ${env:DEBUG}
  runtime: nodejs18.x
  deploymentMethod: direct
  region: eu-west-3
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "execute-api:ManageConnections"
          Resource:
            - "arn:aws:execute-api:*:*:**/@connections/*"

functions:
  scrape-all:
    handler: src/handlers/scrape-all.handler
    timeout: 900
    layers:
      - arn:aws:lambda:eu-west-3:565617039749:layer:chromium:1
  search:
    handler: src/handlers/search.handler
    timeout: 30
    url:
      cors:
        allowedOrigins:
          - http://localhost:4200
          - https://dev.algorea.org
          - https://beta.opentezos.com
        allowedHeaders:
          - Content-Type
        allowedMethods:
          - GET
plugins:
  - serverless-plugin-typescript
  - serverless-offline

# resources:
#   Resources:
#     ALBInvokePermission:
#       Type: AWS::Lambda::Permission
#       Properties:
#         FunctionName: arn:aws:lambda:eu-west-3:269646813173:function:algoreasearch-dev-search
#         Action: lambda:InvokeFunction
#         Principal: elasticloadbalancing.amazonaws.com
#         SourceArn: "arn:aws:elasticloadbalancing:eu-central-1:269646813173:targetgroup/lambda-f26tOfCEwHSNeTmxH1jw/32fd6b20ee9500df"
